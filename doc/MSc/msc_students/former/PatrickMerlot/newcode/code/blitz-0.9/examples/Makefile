# Makefile.in generated by automake 1.9.2 from Makefile.am.
# examples/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#
# Written by Patrick Guio <patrick.guio@fys.uio.no>
#
SOURCES = $(array_SOURCES) $(cartesian_SOURCES) $(cast_SOURCES) $(cfd_SOURCES) $(complex_test_SOURCES) $(convolve_SOURCES) $(curldiv_SOURCES) $(deriv_SOURCES) $(diff_SOURCES) $(erf_SOURCES) $(fixed_SOURCES) $(indirect_SOURCES) $(io_SOURCES) $(iter_SOURCES) $(matmult_SOURCES) $(nested_SOURCES) $(numinquire_SOURCES) $(outer_SOURCES) $(pauli_SOURCES) $(pick_SOURCES) $(polymorph_SOURCES) $(prettyprint_SOURCES) $(qcd_SOURCES) $(rand2_SOURCES) $(random_SOURCES) $(rangexpr_SOURCES) $(reduce_SOURCES) $(simple_SOURCES) $(slicing_SOURCES) $(stencil_SOURCES) $(stencil2_SOURCES) $(stencil3_SOURCES) $(stencilet_SOURCES) $(storage_SOURCES) $(tiny_SOURCES) $(transform_SOURCES) $(useret_SOURCES) $(where_SOURCES) $(whitt_SOURCES)

srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/blitz
pkglibdir = $(libdir)/blitz
pkgincludedir = $(includedir)/blitz
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /local/bin/ginstall -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
target_triplet = x86_64-unknown-linux-gnu
EXTRA_PROGRAMS = array$(EXEEXT) cartesian$(EXEEXT) cast$(EXEEXT) \
	cfd$(EXEEXT) complex-test$(EXEEXT) convolve$(EXEEXT) \
	curldiv$(EXEEXT) deriv$(EXEEXT) diff$(EXEEXT) erf$(EXEEXT) \
	fixed$(EXEEXT) indirect$(EXEEXT) io$(EXEEXT) iter$(EXEEXT) \
	matmult$(EXEEXT) nested$(EXEEXT) numinquire$(EXEEXT) \
	outer$(EXEEXT) pauli$(EXEEXT) pick$(EXEEXT) polymorph$(EXEEXT) \
	prettyprint$(EXEEXT) qcd$(EXEEXT) rand2$(EXEEXT) \
	random$(EXEEXT) rangexpr$(EXEEXT) reduce$(EXEEXT) \
	simple$(EXEEXT) slicing$(EXEEXT) stencil2$(EXEEXT) \
	stencil3$(EXEEXT) stencil$(EXEEXT) stencilet$(EXEEXT) \
	storage$(EXEEXT) tiny$(EXEEXT) transform$(EXEEXT) \
	useret$(EXEEXT) where$(EXEEXT) whitt$(EXEEXT)
subdir = examples
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ac_check_cxx_features.m4 \
	$(top_srcdir)/m4/ac_compiler_specific_header.m4 \
	$(top_srcdir)/m4/ac_compilers_64bits.m4 \
	$(top_srcdir)/m4/ac_cxx_bool.m4 \
	$(top_srcdir)/m4/ac_cxx_complex_math_in_namespace_std.m4 \
	$(top_srcdir)/m4/ac_cxx_const_cast.m4 \
	$(top_srcdir)/m4/ac_cxx_default_template_parameters.m4 \
	$(top_srcdir)/m4/ac_cxx_dynamic_cast.m4 \
	$(top_srcdir)/m4/ac_cxx_enable_debug.m4 \
	$(top_srcdir)/m4/ac_cxx_enable_optimize.m4 \
	$(top_srcdir)/m4/ac_cxx_enum_computations.m4 \
	$(top_srcdir)/m4/ac_cxx_enum_computations_with_cast.m4 \
	$(top_srcdir)/m4/ac_cxx_exceptions.m4 \
	$(top_srcdir)/m4/ac_cxx_explicit.m4 \
	$(top_srcdir)/m4/ac_cxx_explicit_template_function_qualification.m4 \
	$(top_srcdir)/m4/ac_cxx_flags_preset.m4 \
	$(top_srcdir)/m4/ac_cxx_full_specialization_syntax.m4 \
	$(top_srcdir)/m4/ac_cxx_function_nontype_parameters.m4 \
	$(top_srcdir)/m4/ac_cxx_general.m4 \
	$(top_srcdir)/m4/ac_cxx_have_climits.m4 \
	$(top_srcdir)/m4/ac_cxx_have_complex.m4 \
	$(top_srcdir)/m4/ac_cxx_have_complex_fcns.m4 \
	$(top_srcdir)/m4/ac_cxx_have_complex_math1.m4 \
	$(top_srcdir)/m4/ac_cxx_have_complex_math2.m4 \
	$(top_srcdir)/m4/ac_cxx_have_ieee_math.m4 \
	$(top_srcdir)/m4/ac_cxx_have_numeric_limits.m4 \
	$(top_srcdir)/m4/ac_cxx_have_rusage.m4 \
	$(top_srcdir)/m4/ac_cxx_have_std.m4 \
	$(top_srcdir)/m4/ac_cxx_have_stl.m4 \
	$(top_srcdir)/m4/ac_cxx_have_system_v_math.m4 \
	$(top_srcdir)/m4/ac_cxx_have_valarray.m4 \
	$(top_srcdir)/m4/ac_cxx_isnan_in_namespace_std.m4 \
	$(top_srcdir)/m4/ac_cxx_keywords.m4 \
	$(top_srcdir)/m4/ac_cxx_math_fn_in_namespace_std.m4 \
	$(top_srcdir)/m4/ac_cxx_member_constants.m4 \
	$(top_srcdir)/m4/ac_cxx_member_templates.m4 \
	$(top_srcdir)/m4/ac_cxx_member_templates_outside_class.m4 \
	$(top_srcdir)/m4/ac_cxx_mutable.m4 \
	$(top_srcdir)/m4/ac_cxx_namespaces.m4 \
	$(top_srcdir)/m4/ac_cxx_nceg_restrict.m4 \
	$(top_srcdir)/m4/ac_cxx_nceg_restrict_egcs.m4 \
	$(top_srcdir)/m4/ac_cxx_old_for_scoping.m4 \
	$(top_srcdir)/m4/ac_cxx_partial_ordering.m4 \
	$(top_srcdir)/m4/ac_cxx_partial_specialization.m4 \
	$(top_srcdir)/m4/ac_cxx_reinterpret_cast.m4 \
	$(top_srcdir)/m4/ac_cxx_rtti.m4 \
	$(top_srcdir)/m4/ac_cxx_standard_library.m4 \
	$(top_srcdir)/m4/ac_cxx_static_cast.m4 \
	$(top_srcdir)/m4/ac_cxx_template_keyword_qualifier.m4 \
	$(top_srcdir)/m4/ac_cxx_template_qualified_base_class.m4 \
	$(top_srcdir)/m4/ac_cxx_template_qualified_return_type.m4 \
	$(top_srcdir)/m4/ac_cxx_template_scoped_argument_matching.m4 \
	$(top_srcdir)/m4/ac_cxx_templates.m4 \
	$(top_srcdir)/m4/ac_cxx_templates_as_template_arguments.m4 \
	$(top_srcdir)/m4/ac_cxx_templates_features.m4 \
	$(top_srcdir)/m4/ac_cxx_type_casts.m4 \
	$(top_srcdir)/m4/ac_cxx_type_promotion.m4 \
	$(top_srcdir)/m4/ac_cxx_typename.m4 \
	$(top_srcdir)/m4/ac_cxx_use_numtrait.m4 \
	$(top_srcdir)/m4/ac_env.m4 \
	$(top_srcdir)/m4/ac_fortran_flags_preset.m4 \
	$(top_srcdir)/m4/ac_info.m4 $(top_srcdir)/m4/ac_lib_blas.m4 \
	$(top_srcdir)/m4/ac_prog_doxygen.m4 \
	$(top_srcdir)/m4/ax_create_pkgconfig_info.m4 \
	$(top_srcdir)/m4/ax_dirname.m4 \
	$(top_srcdir)/m4/ax_prefix_config_h.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/blitz/config.h
CONFIG_CLEAN_FILES =
am_array_OBJECTS = array.$(OBJEXT)
array_OBJECTS = $(am_array_OBJECTS)
array_LDADD = $(LDADD)
array_DEPENDENCIES =
am_cartesian_OBJECTS = cartesian.$(OBJEXT)
cartesian_OBJECTS = $(am_cartesian_OBJECTS)
cartesian_LDADD = $(LDADD)
cartesian_DEPENDENCIES =
am_cast_OBJECTS = cast.$(OBJEXT)
cast_OBJECTS = $(am_cast_OBJECTS)
cast_LDADD = $(LDADD)
cast_DEPENDENCIES =
am_cfd_OBJECTS = cfd.$(OBJEXT)
cfd_OBJECTS = $(am_cfd_OBJECTS)
cfd_LDADD = $(LDADD)
cfd_DEPENDENCIES =
am_complex_test_OBJECTS = complex-test.$(OBJEXT)
complex_test_OBJECTS = $(am_complex_test_OBJECTS)
complex_test_LDADD = $(LDADD)
complex_test_DEPENDENCIES =
am_convolve_OBJECTS = convolve.$(OBJEXT)
convolve_OBJECTS = $(am_convolve_OBJECTS)
convolve_LDADD = $(LDADD)
convolve_DEPENDENCIES =
am_curldiv_OBJECTS = curldiv.$(OBJEXT)
curldiv_OBJECTS = $(am_curldiv_OBJECTS)
curldiv_LDADD = $(LDADD)
curldiv_DEPENDENCIES =
am_deriv_OBJECTS = deriv.$(OBJEXT)
deriv_OBJECTS = $(am_deriv_OBJECTS)
deriv_LDADD = $(LDADD)
deriv_DEPENDENCIES =
am_diff_OBJECTS = diff.$(OBJEXT)
diff_OBJECTS = $(am_diff_OBJECTS)
diff_LDADD = $(LDADD)
diff_DEPENDENCIES =
am_erf_OBJECTS = erf.$(OBJEXT)
erf_OBJECTS = $(am_erf_OBJECTS)
erf_LDADD = $(LDADD)
erf_DEPENDENCIES =
am_fixed_OBJECTS = fixed.$(OBJEXT)
fixed_OBJECTS = $(am_fixed_OBJECTS)
fixed_LDADD = $(LDADD)
fixed_DEPENDENCIES =
am_indirect_OBJECTS = indirect.$(OBJEXT)
indirect_OBJECTS = $(am_indirect_OBJECTS)
indirect_LDADD = $(LDADD)
indirect_DEPENDENCIES =
am_io_OBJECTS = io.$(OBJEXT)
io_OBJECTS = $(am_io_OBJECTS)
io_LDADD = $(LDADD)
io_DEPENDENCIES =
am_iter_OBJECTS = iter.$(OBJEXT)
iter_OBJECTS = $(am_iter_OBJECTS)
iter_LDADD = $(LDADD)
iter_DEPENDENCIES =
am_matmult_OBJECTS = matmult.$(OBJEXT)
matmult_OBJECTS = $(am_matmult_OBJECTS)
matmult_LDADD = $(LDADD)
matmult_DEPENDENCIES =
am_nested_OBJECTS = nested.$(OBJEXT)
nested_OBJECTS = $(am_nested_OBJECTS)
nested_LDADD = $(LDADD)
nested_DEPENDENCIES =
am_numinquire_OBJECTS = numinquire.$(OBJEXT)
numinquire_OBJECTS = $(am_numinquire_OBJECTS)
numinquire_LDADD = $(LDADD)
numinquire_DEPENDENCIES =
am_outer_OBJECTS = outer.$(OBJEXT)
outer_OBJECTS = $(am_outer_OBJECTS)
outer_LDADD = $(LDADD)
outer_DEPENDENCIES =
am_pauli_OBJECTS = pauli.$(OBJEXT)
pauli_OBJECTS = $(am_pauli_OBJECTS)
pauli_LDADD = $(LDADD)
pauli_DEPENDENCIES =
am_pick_OBJECTS = pick.$(OBJEXT)
pick_OBJECTS = $(am_pick_OBJECTS)
pick_LDADD = $(LDADD)
pick_DEPENDENCIES =
am_polymorph_OBJECTS = polymorph.$(OBJEXT)
polymorph_OBJECTS = $(am_polymorph_OBJECTS)
polymorph_LDADD = $(LDADD)
polymorph_DEPENDENCIES =
am_prettyprint_OBJECTS = prettyprint.$(OBJEXT)
prettyprint_OBJECTS = $(am_prettyprint_OBJECTS)
prettyprint_LDADD = $(LDADD)
prettyprint_DEPENDENCIES =
am_qcd_OBJECTS = qcd.$(OBJEXT)
qcd_OBJECTS = $(am_qcd_OBJECTS)
qcd_LDADD = $(LDADD)
qcd_DEPENDENCIES =
am_rand2_OBJECTS = rand2.$(OBJEXT)
rand2_OBJECTS = $(am_rand2_OBJECTS)
rand2_LDADD = $(LDADD)
rand2_DEPENDENCIES =
am_random_OBJECTS = random.$(OBJEXT)
random_OBJECTS = $(am_random_OBJECTS)
random_LDADD = $(LDADD)
random_DEPENDENCIES =
am_rangexpr_OBJECTS = rangexpr.$(OBJEXT)
rangexpr_OBJECTS = $(am_rangexpr_OBJECTS)
rangexpr_LDADD = $(LDADD)
rangexpr_DEPENDENCIES =
am_reduce_OBJECTS = reduce.$(OBJEXT)
reduce_OBJECTS = $(am_reduce_OBJECTS)
reduce_LDADD = $(LDADD)
reduce_DEPENDENCIES =
am_simple_OBJECTS = simple.$(OBJEXT)
simple_OBJECTS = $(am_simple_OBJECTS)
simple_LDADD = $(LDADD)
simple_DEPENDENCIES =
am_slicing_OBJECTS = slicing.$(OBJEXT)
slicing_OBJECTS = $(am_slicing_OBJECTS)
slicing_LDADD = $(LDADD)
slicing_DEPENDENCIES =
am_stencil_OBJECTS = stencil.$(OBJEXT)
stencil_OBJECTS = $(am_stencil_OBJECTS)
stencil_LDADD = $(LDADD)
stencil_DEPENDENCIES =
am_stencil2_OBJECTS = stencil2.$(OBJEXT)
stencil2_OBJECTS = $(am_stencil2_OBJECTS)
stencil2_LDADD = $(LDADD)
stencil2_DEPENDENCIES =
am_stencil3_OBJECTS = stencil3.$(OBJEXT)
stencil3_OBJECTS = $(am_stencil3_OBJECTS)
stencil3_LDADD = $(LDADD)
stencil3_DEPENDENCIES =
am_stencilet_OBJECTS = stencilet.$(OBJEXT)
stencilet_OBJECTS = $(am_stencilet_OBJECTS)
stencilet_LDADD = $(LDADD)
stencilet_DEPENDENCIES =
am_storage_OBJECTS = storage.$(OBJEXT)
storage_OBJECTS = $(am_storage_OBJECTS)
storage_LDADD = $(LDADD)
storage_DEPENDENCIES =
am_tiny_OBJECTS = tiny.$(OBJEXT)
tiny_OBJECTS = $(am_tiny_OBJECTS)
tiny_LDADD = $(LDADD)
tiny_DEPENDENCIES =
am_transform_OBJECTS = transform.$(OBJEXT)
transform_OBJECTS = $(am_transform_OBJECTS)
transform_LDADD = $(LDADD)
transform_DEPENDENCIES =
am_useret_OBJECTS = useret.$(OBJEXT)
useret_OBJECTS = $(am_useret_OBJECTS)
useret_LDADD = $(LDADD)
useret_DEPENDENCIES =
am_where_OBJECTS = where.$(OBJEXT)
where_OBJECTS = $(am_where_OBJECTS)
where_LDADD = $(LDADD)
where_DEPENDENCIES =
am_whitt_OBJECTS = whitt.$(OBJEXT)
whitt_OBJECTS = $(am_whitt_OBJECTS)
whitt_LDADD = $(LDADD)
whitt_DEPENDENCIES =
DEFAULT_INCLUDES = 
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link --tag=CXX $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(array_SOURCES) $(cartesian_SOURCES) $(cast_SOURCES) \
	$(cfd_SOURCES) $(complex_test_SOURCES) $(convolve_SOURCES) \
	$(curldiv_SOURCES) $(deriv_SOURCES) $(diff_SOURCES) \
	$(erf_SOURCES) $(fixed_SOURCES) $(indirect_SOURCES) \
	$(io_SOURCES) $(iter_SOURCES) $(matmult_SOURCES) \
	$(nested_SOURCES) $(numinquire_SOURCES) $(outer_SOURCES) \
	$(pauli_SOURCES) $(pick_SOURCES) $(polymorph_SOURCES) \
	$(prettyprint_SOURCES) $(qcd_SOURCES) $(rand2_SOURCES) \
	$(random_SOURCES) $(rangexpr_SOURCES) $(reduce_SOURCES) \
	$(simple_SOURCES) $(slicing_SOURCES) $(stencil_SOURCES) \
	$(stencil2_SOURCES) $(stencil3_SOURCES) $(stencilet_SOURCES) \
	$(storage_SOURCES) $(tiny_SOURCES) $(transform_SOURCES) \
	$(useret_SOURCES) $(where_SOURCES) $(whitt_SOURCES)
DIST_SOURCES = $(array_SOURCES) $(cartesian_SOURCES) $(cast_SOURCES) \
	$(cfd_SOURCES) $(complex_test_SOURCES) $(convolve_SOURCES) \
	$(curldiv_SOURCES) $(deriv_SOURCES) $(diff_SOURCES) \
	$(erf_SOURCES) $(fixed_SOURCES) $(indirect_SOURCES) \
	$(io_SOURCES) $(iter_SOURCES) $(matmult_SOURCES) \
	$(nested_SOURCES) $(numinquire_SOURCES) $(outer_SOURCES) \
	$(pauli_SOURCES) $(pick_SOURCES) $(polymorph_SOURCES) \
	$(prettyprint_SOURCES) $(qcd_SOURCES) $(rand2_SOURCES) \
	$(random_SOURCES) $(rangexpr_SOURCES) $(reduce_SOURCES) \
	$(simple_SOURCES) $(slicing_SOURCES) $(stencil_SOURCES) \
	$(stencil2_SOURCES) $(stencil3_SOURCES) $(stencilet_SOURCES) \
	$(storage_SOURCES) $(tiny_SOURCES) $(transform_SOURCES) \
	$(useret_SOURCES) $(where_SOURCES) $(whitt_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /mn/felt/u1/patrime/master/C++/BLITZ_test/blitz-0.9/config/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /mn/felt/u1/patrime/master/C++/BLITZ_test/blitz-0.9/config/missing --run tar
AR = ar
AR_FLAGS = -cru
AUTOCONF = ${SHELL} /mn/felt/u1/patrime/master/C++/BLITZ_test/blitz-0.9/config/missing --run autoconf
AUTOHEADER = ${SHELL} /mn/felt/u1/patrime/master/C++/BLITZ_test/blitz-0.9/config/missing --run autoheader
AUTOMAKE = ${SHELL} /mn/felt/u1/patrime/master/C++/BLITZ_test/blitz-0.9/config/missing --run automake-1.9
AWK = gawk
BLASLIB = 
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
COMPILER_SPECIFIC_HEADER = gnu/bzconfig.h
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFCFLAG = -DFORTRAN_90 -DBZ_FORTRAN_SYMBOLS_WITH_TRAILING_UNDERSCORES
CXXFFLAGS = -DBZ_FORTRAN_SYMBOLS_WITH_TRAILING_UNDERSCORES
CXXFLAGS = 
CXX_DEBUG_FLAGS = -g -DBZ_DEBUG
CXX_LIBS = 
CXX_OPTIMIZE_FLAGS = -O3 -funroll-loops -fstrict-aliasing -fomit-frame-pointer -ffast-math
CXX_PROFIL_FLAGS = -pg
CYGPATH_W = echo
DATE = Tue Jan 20 11:13:16 CET 2009
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DOT = 
DOXYGEN = doxygen
DOXYGEN_DOC_FALSE = #
DOXYGEN_DOC_TRUE = 
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
F77 = ifort
F77_OPTIMIZE_FLAGS = -O3 -Zp16 -ip -pad -unroll -fno-alias -safe_cray_ptr
F90_COMPILER_FALSE = #
F90_COMPILER_TRUE = 
FC = ifort
FCFLAGS =  -FR
FCFLAGS_f90 = 
FCLIBS =  -L/local/opt/intel/fce/10.1.011/lib -L/usr/lib/gcc/x86_64-redhat-linux/4.1.2/ -L/usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../lib64 -lifport -lifcore -limf -lsvml -lm -lipgo -lirc -lgcc_s -lirc_s -ldl
FC_OPTIMIZE_FLAGS = -O3 -Zp16 -ip -pad -unroll -fno-alias -safe_cray_ptr
FFLAGS = 
FLIBS =  -L/local/opt/intel/fce/10.1.011/lib -L/usr/lib/gcc/x86_64-redhat-linux/4.1.2/ -L/usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../lib64 -lifport -lifcore -limf -lsvml -lm -lipgo -lirc -lgcc_s -lirc_s -ldl
FORTRAN_ENABLED_FALSE = #
FORTRAN_ENABLED_TRUE = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAINTAINER_MODE_FALSE = 
MAINTAINER_MODE_TRUE = #
MAKEINFO = ${SHELL} /mn/felt/u1/patrime/master/C++/BLITZ_test/blitz-0.9/config/missing --run makeinfo
OBJEXT = o
OS = Linux ket.uio.no 2.6.18-92.1.22.el5 #1 SMP Fri Dec 5 09:28:22 EST 2008 x86_64 GNU/Linux
PACKAGE = blitz
PACKAGE_BUGREPORT = blitz-bugs@oonumerics.org
PACKAGE_NAME = blitz
PACKAGE_STRING = blitz 0.9
PACKAGE_TARNAME = blitz
PACKAGE_VERSION = 0.9
PATH_SEPARATOR = :
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 0.9
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = 
ac_ct_F77 = ifort
ac_ct_FC = ifort
ac_ct_RANLIB = ranlib
ac_ct_STRIP = strip
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
datadir = ${prefix}/share
enable_dot = no
enable_html_docs = yes
enable_latex_docs = no
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /mn/felt/u1/patrime/master/C++/BLITZ_test/blitz-0.9/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
pkgconfig_libdir = ${libdir}/pkgconfig
pkgconfig_libfile = blitz.pc
prefix = /usr/local
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target = x86_64-unknown-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = unknown
EXTRA_DIST = stencil4.f profile.cpp tiny2.cpp tiny3.cpp
AM_CPPFLAGS = -I$(srcdir) -I$(top_srcdir) -I$(top_builddir)
LDADD = -L$(top_builddir)/lib -lblitz
array_SOURCES = array.cpp
cartesian_SOURCES = cartesian.cpp
cast_SOURCES = cast.cpp
cfd_SOURCES = cfd.cpp
complex_test_SOURCES = complex-test.cpp
convolve_SOURCES = convolve.cpp
curldiv_SOURCES = curldiv.cpp
deriv_SOURCES = deriv.cpp
diff_SOURCES = diff.cpp
erf_SOURCES = erf.cpp
fixed_SOURCES = fixed.cpp
indirect_SOURCES = indirect.cpp
io_SOURCES = io.cpp
iter_SOURCES = iter.cpp
matmult_SOURCES = matmult.cpp
nested_SOURCES = nested.cpp
numinquire_SOURCES = numinquire.cpp
outer_SOURCES = outer.cpp
pauli_SOURCES = pauli.cpp
pick_SOURCES = pick.cpp
polymorph_SOURCES = polymorph.cpp
prettyprint_SOURCES = prettyprint.cpp
#profile_SOURCES = profile.cpp
qcd_SOURCES = qcd.cpp
rand2_SOURCES = rand2.cpp
random_SOURCES = random.cpp
rangexpr_SOURCES = rangexpr.cpp
reduce_SOURCES = reduce.cpp
simple_SOURCES = simple.cpp
slicing_SOURCES = slicing.cpp
stencil2_SOURCES = stencil2.cpp
stencil3_SOURCES = stencil3.cpp
stencil_SOURCES = stencil.cpp
stencilet_SOURCES = stencilet.cpp
storage_SOURCES = storage.cpp
#tiny2_SOURCES = tiny2.cpp
#tiny3_SOURCES = tiny3.cpp
tiny_SOURCES = tiny.cpp
transform_SOURCES = transform.cpp
useret_SOURCES = useret.cpp
where_SOURCES = where.cpp
whitt_SOURCES = whitt.cpp
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  examples/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  examples/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
array$(EXEEXT): $(array_OBJECTS) $(array_DEPENDENCIES) 
	@rm -f array$(EXEEXT)
	$(CXXLINK) $(array_LDFLAGS) $(array_OBJECTS) $(array_LDADD) $(LIBS)
cartesian$(EXEEXT): $(cartesian_OBJECTS) $(cartesian_DEPENDENCIES) 
	@rm -f cartesian$(EXEEXT)
	$(CXXLINK) $(cartesian_LDFLAGS) $(cartesian_OBJECTS) $(cartesian_LDADD) $(LIBS)
cast$(EXEEXT): $(cast_OBJECTS) $(cast_DEPENDENCIES) 
	@rm -f cast$(EXEEXT)
	$(CXXLINK) $(cast_LDFLAGS) $(cast_OBJECTS) $(cast_LDADD) $(LIBS)
cfd$(EXEEXT): $(cfd_OBJECTS) $(cfd_DEPENDENCIES) 
	@rm -f cfd$(EXEEXT)
	$(CXXLINK) $(cfd_LDFLAGS) $(cfd_OBJECTS) $(cfd_LDADD) $(LIBS)
complex-test$(EXEEXT): $(complex_test_OBJECTS) $(complex_test_DEPENDENCIES) 
	@rm -f complex-test$(EXEEXT)
	$(CXXLINK) $(complex_test_LDFLAGS) $(complex_test_OBJECTS) $(complex_test_LDADD) $(LIBS)
convolve$(EXEEXT): $(convolve_OBJECTS) $(convolve_DEPENDENCIES) 
	@rm -f convolve$(EXEEXT)
	$(CXXLINK) $(convolve_LDFLAGS) $(convolve_OBJECTS) $(convolve_LDADD) $(LIBS)
curldiv$(EXEEXT): $(curldiv_OBJECTS) $(curldiv_DEPENDENCIES) 
	@rm -f curldiv$(EXEEXT)
	$(CXXLINK) $(curldiv_LDFLAGS) $(curldiv_OBJECTS) $(curldiv_LDADD) $(LIBS)
deriv$(EXEEXT): $(deriv_OBJECTS) $(deriv_DEPENDENCIES) 
	@rm -f deriv$(EXEEXT)
	$(CXXLINK) $(deriv_LDFLAGS) $(deriv_OBJECTS) $(deriv_LDADD) $(LIBS)
diff$(EXEEXT): $(diff_OBJECTS) $(diff_DEPENDENCIES) 
	@rm -f diff$(EXEEXT)
	$(CXXLINK) $(diff_LDFLAGS) $(diff_OBJECTS) $(diff_LDADD) $(LIBS)
erf$(EXEEXT): $(erf_OBJECTS) $(erf_DEPENDENCIES) 
	@rm -f erf$(EXEEXT)
	$(CXXLINK) $(erf_LDFLAGS) $(erf_OBJECTS) $(erf_LDADD) $(LIBS)
fixed$(EXEEXT): $(fixed_OBJECTS) $(fixed_DEPENDENCIES) 
	@rm -f fixed$(EXEEXT)
	$(CXXLINK) $(fixed_LDFLAGS) $(fixed_OBJECTS) $(fixed_LDADD) $(LIBS)
indirect$(EXEEXT): $(indirect_OBJECTS) $(indirect_DEPENDENCIES) 
	@rm -f indirect$(EXEEXT)
	$(CXXLINK) $(indirect_LDFLAGS) $(indirect_OBJECTS) $(indirect_LDADD) $(LIBS)
io$(EXEEXT): $(io_OBJECTS) $(io_DEPENDENCIES) 
	@rm -f io$(EXEEXT)
	$(CXXLINK) $(io_LDFLAGS) $(io_OBJECTS) $(io_LDADD) $(LIBS)
iter$(EXEEXT): $(iter_OBJECTS) $(iter_DEPENDENCIES) 
	@rm -f iter$(EXEEXT)
	$(CXXLINK) $(iter_LDFLAGS) $(iter_OBJECTS) $(iter_LDADD) $(LIBS)
matmult$(EXEEXT): $(matmult_OBJECTS) $(matmult_DEPENDENCIES) 
	@rm -f matmult$(EXEEXT)
	$(CXXLINK) $(matmult_LDFLAGS) $(matmult_OBJECTS) $(matmult_LDADD) $(LIBS)
nested$(EXEEXT): $(nested_OBJECTS) $(nested_DEPENDENCIES) 
	@rm -f nested$(EXEEXT)
	$(CXXLINK) $(nested_LDFLAGS) $(nested_OBJECTS) $(nested_LDADD) $(LIBS)
numinquire$(EXEEXT): $(numinquire_OBJECTS) $(numinquire_DEPENDENCIES) 
	@rm -f numinquire$(EXEEXT)
	$(CXXLINK) $(numinquire_LDFLAGS) $(numinquire_OBJECTS) $(numinquire_LDADD) $(LIBS)
outer$(EXEEXT): $(outer_OBJECTS) $(outer_DEPENDENCIES) 
	@rm -f outer$(EXEEXT)
	$(CXXLINK) $(outer_LDFLAGS) $(outer_OBJECTS) $(outer_LDADD) $(LIBS)
pauli$(EXEEXT): $(pauli_OBJECTS) $(pauli_DEPENDENCIES) 
	@rm -f pauli$(EXEEXT)
	$(CXXLINK) $(pauli_LDFLAGS) $(pauli_OBJECTS) $(pauli_LDADD) $(LIBS)
pick$(EXEEXT): $(pick_OBJECTS) $(pick_DEPENDENCIES) 
	@rm -f pick$(EXEEXT)
	$(CXXLINK) $(pick_LDFLAGS) $(pick_OBJECTS) $(pick_LDADD) $(LIBS)
polymorph$(EXEEXT): $(polymorph_OBJECTS) $(polymorph_DEPENDENCIES) 
	@rm -f polymorph$(EXEEXT)
	$(CXXLINK) $(polymorph_LDFLAGS) $(polymorph_OBJECTS) $(polymorph_LDADD) $(LIBS)
prettyprint$(EXEEXT): $(prettyprint_OBJECTS) $(prettyprint_DEPENDENCIES) 
	@rm -f prettyprint$(EXEEXT)
	$(CXXLINK) $(prettyprint_LDFLAGS) $(prettyprint_OBJECTS) $(prettyprint_LDADD) $(LIBS)
qcd$(EXEEXT): $(qcd_OBJECTS) $(qcd_DEPENDENCIES) 
	@rm -f qcd$(EXEEXT)
	$(CXXLINK) $(qcd_LDFLAGS) $(qcd_OBJECTS) $(qcd_LDADD) $(LIBS)
rand2$(EXEEXT): $(rand2_OBJECTS) $(rand2_DEPENDENCIES) 
	@rm -f rand2$(EXEEXT)
	$(CXXLINK) $(rand2_LDFLAGS) $(rand2_OBJECTS) $(rand2_LDADD) $(LIBS)
random$(EXEEXT): $(random_OBJECTS) $(random_DEPENDENCIES) 
	@rm -f random$(EXEEXT)
	$(CXXLINK) $(random_LDFLAGS) $(random_OBJECTS) $(random_LDADD) $(LIBS)
rangexpr$(EXEEXT): $(rangexpr_OBJECTS) $(rangexpr_DEPENDENCIES) 
	@rm -f rangexpr$(EXEEXT)
	$(CXXLINK) $(rangexpr_LDFLAGS) $(rangexpr_OBJECTS) $(rangexpr_LDADD) $(LIBS)
reduce$(EXEEXT): $(reduce_OBJECTS) $(reduce_DEPENDENCIES) 
	@rm -f reduce$(EXEEXT)
	$(CXXLINK) $(reduce_LDFLAGS) $(reduce_OBJECTS) $(reduce_LDADD) $(LIBS)
simple$(EXEEXT): $(simple_OBJECTS) $(simple_DEPENDENCIES) 
	@rm -f simple$(EXEEXT)
	$(CXXLINK) $(simple_LDFLAGS) $(simple_OBJECTS) $(simple_LDADD) $(LIBS)
slicing$(EXEEXT): $(slicing_OBJECTS) $(slicing_DEPENDENCIES) 
	@rm -f slicing$(EXEEXT)
	$(CXXLINK) $(slicing_LDFLAGS) $(slicing_OBJECTS) $(slicing_LDADD) $(LIBS)
stencil$(EXEEXT): $(stencil_OBJECTS) $(stencil_DEPENDENCIES) 
	@rm -f stencil$(EXEEXT)
	$(CXXLINK) $(stencil_LDFLAGS) $(stencil_OBJECTS) $(stencil_LDADD) $(LIBS)
stencil2$(EXEEXT): $(stencil2_OBJECTS) $(stencil2_DEPENDENCIES) 
	@rm -f stencil2$(EXEEXT)
	$(CXXLINK) $(stencil2_LDFLAGS) $(stencil2_OBJECTS) $(stencil2_LDADD) $(LIBS)
stencil3$(EXEEXT): $(stencil3_OBJECTS) $(stencil3_DEPENDENCIES) 
	@rm -f stencil3$(EXEEXT)
	$(CXXLINK) $(stencil3_LDFLAGS) $(stencil3_OBJECTS) $(stencil3_LDADD) $(LIBS)
stencilet$(EXEEXT): $(stencilet_OBJECTS) $(stencilet_DEPENDENCIES) 
	@rm -f stencilet$(EXEEXT)
	$(CXXLINK) $(stencilet_LDFLAGS) $(stencilet_OBJECTS) $(stencilet_LDADD) $(LIBS)
storage$(EXEEXT): $(storage_OBJECTS) $(storage_DEPENDENCIES) 
	@rm -f storage$(EXEEXT)
	$(CXXLINK) $(storage_LDFLAGS) $(storage_OBJECTS) $(storage_LDADD) $(LIBS)
tiny$(EXEEXT): $(tiny_OBJECTS) $(tiny_DEPENDENCIES) 
	@rm -f tiny$(EXEEXT)
	$(CXXLINK) $(tiny_LDFLAGS) $(tiny_OBJECTS) $(tiny_LDADD) $(LIBS)
transform$(EXEEXT): $(transform_OBJECTS) $(transform_DEPENDENCIES) 
	@rm -f transform$(EXEEXT)
	$(CXXLINK) $(transform_LDFLAGS) $(transform_OBJECTS) $(transform_LDADD) $(LIBS)
useret$(EXEEXT): $(useret_OBJECTS) $(useret_DEPENDENCIES) 
	@rm -f useret$(EXEEXT)
	$(CXXLINK) $(useret_LDFLAGS) $(useret_OBJECTS) $(useret_LDADD) $(LIBS)
where$(EXEEXT): $(where_OBJECTS) $(where_DEPENDENCIES) 
	@rm -f where$(EXEEXT)
	$(CXXLINK) $(where_LDFLAGS) $(where_OBJECTS) $(where_LDADD) $(LIBS)
whitt$(EXEEXT): $(whitt_OBJECTS) $(whitt_DEPENDENCIES) 
	@rm -f whitt$(EXEEXT)
	$(CXXLINK) $(whitt_LDFLAGS) $(whitt_OBJECTS) $(whitt_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/array.Po
include ./$(DEPDIR)/cartesian.Po
include ./$(DEPDIR)/cast.Po
include ./$(DEPDIR)/cfd.Po
include ./$(DEPDIR)/complex-test.Po
include ./$(DEPDIR)/convolve.Po
include ./$(DEPDIR)/curldiv.Po
include ./$(DEPDIR)/deriv.Po
include ./$(DEPDIR)/diff.Po
include ./$(DEPDIR)/erf.Po
include ./$(DEPDIR)/fixed.Po
include ./$(DEPDIR)/indirect.Po
include ./$(DEPDIR)/io.Po
include ./$(DEPDIR)/iter.Po
include ./$(DEPDIR)/matmult.Po
include ./$(DEPDIR)/nested.Po
include ./$(DEPDIR)/numinquire.Po
include ./$(DEPDIR)/outer.Po
include ./$(DEPDIR)/pauli.Po
include ./$(DEPDIR)/pick.Po
include ./$(DEPDIR)/polymorph.Po
include ./$(DEPDIR)/prettyprint.Po
include ./$(DEPDIR)/qcd.Po
include ./$(DEPDIR)/rand2.Po
include ./$(DEPDIR)/random.Po
include ./$(DEPDIR)/rangexpr.Po
include ./$(DEPDIR)/reduce.Po
include ./$(DEPDIR)/simple.Po
include ./$(DEPDIR)/slicing.Po
include ./$(DEPDIR)/stencil.Po
include ./$(DEPDIR)/stencil2.Po
include ./$(DEPDIR)/stencil3.Po
include ./$(DEPDIR)/stencilet.Po
include ./$(DEPDIR)/storage.Po
include ./$(DEPDIR)/tiny.Po
include ./$(DEPDIR)/transform.Po
include ./$(DEPDIR)/useret.Po
include ./$(DEPDIR)/where.Po
include ./$(DEPDIR)/whitt.Po

.cpp.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-local mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-local ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-man install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-info-am


#compile: $(EXTRA_PROGRAMS)

check-examples: $(EXTRA_PROGRAMS)
	@echo Running examples...
	@for prog in $(EXTRA_PROGRAMS) ; do \
		echo $$prog && (./$$prog > /dev/null 2>&1) || exit 1; \
	done
	@echo All tests passed.

#all:

clean-local:
	-rm -rf *.ii *.ti cxx_repository Template.dir ii_files ti_files $(EXTRA_PROGRAMS)
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
