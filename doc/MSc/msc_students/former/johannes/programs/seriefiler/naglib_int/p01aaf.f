      INTEGER FUNCTION P01AAF(IFAIL, ERROR, SRNAME)
C     MARK 1 RELEASE.  NAG COPYRIGHT 1971
C     MARK 3 REVISED
C     MARK 4A REVISED, IER-45
C     MARK 4.5 REVISED
C     MARK 7 REVISED (DEC 1978)
C     MARK 11 REVISED (FEB 1984)
C     RETURNS THE VALUE	OF ERROR OR TERMINATES THE PROGRAM.
      INTEGER ERROR, IFAIL, NOUT
C$P 1
      DOUBLE PRECISION SRNAME
      CHARACTER REPLAY
C     TEST IF NO ERROR DETECTED
      IF (ERROR.EQ.0) GO TO 20
C     DETERMINE	OUTPUT UNIT FOR	MESSAGE
      CALL X04AAF (0,NOUT)
C     TEST FOR SOFT FAILURE
      IF (MOD(IFAIL,10).EQ.1) GO TO 10
C     HARD FAILURE
****   !!!!!!
****   STDOUT is chanched on '*'
****   V.Grikurov, 15/09/94      
      WRITE (*,99999) SRNAME, ERROR
      READ (*, 11111) REPLAY
****  WRITE (NOUT,99999) SRNAME, ERROR
****  READ (NOUT, 11111) REPLAY      
C     ******************** IMPLEMENTATION NOTE ********************
C     THE FOLLOWING STOP STATEMENT MAY BE REPLACED BY A	CALL TO	AN
C     IMPLEMENTATION-DEPENDENT ROUTINE TO DISPLAY A MESSAGE AND/OR
C     ABORT THE	PROGRAM.
C     *************************************************************
      IF(REPLAY.EQ.'Y' .OR. REPLAY.EQ.'y') GOTO 20
      STOP
C     SOFT FAIL
C     TEST IF ERROR MESSAGES SUPPRESSED
   10 IF (MOD(IFAIL/10,10).EQ.0) GO TO 20
      WRITE (NOUT,99999) SRNAME, ERROR
   20 P01AAF = ERROR
      RETURN
99999 FORMAT(1H , 38HERROR DETECTED BY	NAG LIBRARY ROUTINE , A8,
     * 11H - IFAIL = , I5/1H , 22HCONTINUE ANYWAY (Y/N)? $)
11111 FORMAT( A1 )
      END

      SUBROUTINE X04AAF(I,NERR)
C     MARK 7 RELEASE. NAG COPYRIGHT 1978
C     MARK 7C REVISED IER-190 (MAY 1979)
C     IF I = 0,	SETS NERR TO CURRENT ERROR MESSAGE UNIT	NUMBER
C     (STORED IN NERR1).
C     IF I = 1,	CHANGES	CURRENT	ERROR MESSAGE UNIT NUMBER TO
C     VALUE SPECIFIED BY NERR.
C
C     *** NOTE ***
C     THIS ROUTINE ASSUMES THAT	THE VALUE OF NERR1 IS SAVED
C     BETWEEN CALLS.  IN SOME IMPLEMENTATIONS IT MAY BE
C     NECESSARY	TO STORE NERR1 IN A LABELLED COMMON
C     BLOCK /AX04AA/ TO	ACHIEVE	THIS.
C
C     .. SCALAR	ARGUMENTS ..
      INTEGER I, NERR
C     ..
C     .. LOCAL SCALARS ..
      INTEGER NERR1
C     ..
      DATA NERR1 /6/
      IF (I.EQ.0) NERR = NERR1
      IF (I.EQ.1) NERR1	= NERR
      RETURN
      END
